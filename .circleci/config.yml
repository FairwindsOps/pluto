version: 2.1

orbs:
  rok8s-scripts: fairwinds/rok8s-scripts@11

executors:
  golang-exec:
    docker:
      - image: circleci/golang:1.16-buster

references:
  install_goreleaser: &install_goreleaser
    run:
      name: Install GoReleaser
      command: |
        curl -fsSLo goreleaser.deb https://github.com/goreleaser/goreleaser/releases/download/v0.131.1/goreleaser_amd64.deb
        echo "640790dcbfa864f26de4c26c2d491f293a64525c8c6641c5bbdec7136b38977e goreleaser.deb" | sha256sum -c -
        sudo dpkg -i goreleaser.deb
        rm goreleaser.deb
  e2e_config: &e2e_config
    command_runner_image: quay.io/reactiveops/ci-images:v11-buster
    kind_node_image: "kindest/node:v1.18.0@sha256:0e20578828edd939d25eb98496a685c76c98d54084932f76069f886ec315d694"
    executor: golang-exec
    pre_script: e2e/pre.sh
    store-test-results: /tmp/test-results
    script: e2e/test.sh
    requires:
      - test
    filters:
      branches:
        only: /.*/
      tags:
        ignore: /.*/

jobs:
  test:
    working_directory: /go/src/github.com/fairwindsops/pluto
    docker:
      - image: circleci/golang:1.16
    steps:
      - checkout
      - run: go mod download && go mod verify
      - run: go get github.com/markbates/pkger/cmd/pkger
      - run: pkger
      - run: go test -v ./... -coverprofile=coverage.txt -covermode=atomic
      - run:
          name: SonarCloud
          command: |
            set -ex
            mkdir -p /tmp/cache
            VERSION=4.1.0.1829
            SCANNER_DIRECTORY=/tmp/cache/scanner
            SONAR_USER_HOME=$SCANNER_DIRECTORY/.sonar
            OS="linux"
            echo $SONAR_USER_HOME
            if [[ ! -x "$SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner" ]]; then
              curl -Ol https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$VERSION-$OS.zip
              unzip -qq -o sonar-scanner-cli-$VERSION-$OS.zip -d $SCANNER_DIRECTORY
            fi
            chmod +x $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner
            chmod +x $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/jre/bin/java
            $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner -X -Dsonar.projectBaseDir="/go/src/github.com/fairwindsops/pluto/" -Dsonar.host.url="https://sonarcloud.io"
      - save_cache:
          key: v1-sonarcloud-scanner-4.1.0.1829
          paths: /tmp/cache/scanner
  release_binary:
    working_directory: /go/src/github.com/fairwindsops/pluto
    docker:
      - image: circleci/golang:1.15
        environment:
          GO111MODULE: "on"
    steps:
      - checkout
      - run: go mod download && go mod verify
      - run: go get github.com/markbates/pkger/cmd/pkger
      - run: pkger
      - *install_goreleaser
      - run: goreleaser
  publish_docs:
    docker:
      - image: cimg/node:15.5.1
    steps:
      - checkout
      - run:
          name: Build Docs Site
          command: |
            set -e
            cd ./docs
            npm install
            npm run check-links
            npm run build
      - run:
          name: Install AWS CLI
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      - run:
          name: Publish Docs Site to S3
          command: |
            cd ./dist
            aws s3 sync ./ s3://pluto.docs.fairwinds.com --delete
workflows:
  version: 2
  test:
    jobs:
      - test
      - rok8s-scripts/kubernetes_e2e_tests:
          requires:
            - test
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /.*/
          name: functional tests
          <<: *e2e_config
      - rok8s-scripts/docker_build_and_push:
          name: build-and-push-container
          docker-push: true
          enable_docker_layer_caching: false
          config_file: .circleci/build.config
          context: org-global
          docker-login: true
          password-variable: "fairwinds_quay_token"
          registry: quay.io
          username: fairwinds+circleci
          requires:
            - test
      - rok8s-scripts/insights:
          name: insights
          requires:
            - build-and-push-container
  release:
    jobs:
      - publish_docs:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - release_binary:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - rok8s-scripts/docker_build_and_push:
          name: build-and-push-container
          docker-push: true
          enable_docker_layer_caching: false
          config_file: .circleci/build.config
          context: org-global
          docker-login: true
          password-variable: "fairwinds_quay_token"
          registry: quay.io
          username: fairwinds+circleci
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
