version: 2.1

orbs:
  rok8s: fairwinds/rok8s-scripts@11

executors:
  golang-exec:
    docker:
      - image: circleci/golang:1.17-buster

references:
  e2e_config: &e2e_config
    command_runner_image: quay.io/reactiveops/ci-images:v11-buster
    kind_node_image: "kindest/node:v1.18.0@sha256:0e20578828edd939d25eb98496a685c76c98d54084932f76069f886ec315d694"
    executor: golang-exec
    pre_script: e2e/pre.sh
    store-test-results: /tmp/test-results
    script: e2e/test.sh
    requires:
      - test
    filters:
      branches:
        only: /.*/
      tags:
        ignore: /.*/
  enable_experimental_features: &enable_experimental_docker_features
    run:
      name: enable experimental features
      command: |
        set -ex
        apk --update add openssh
        ssh remote-docker \<<EOF
          sudo bash -c 'echo "{\"experimental\": true}" > /etc/docker/daemon.json'
          sudo systemctl restart docker
        EOF
  install_vault: &install_vault
    run:
      name: install hashicorp vault
      command: |
        cd /tmp
        curl -LO https://releases.hashicorp.com/vault/1.8.1/vault_1.8.1_linux_amd64.zip
        unzip vault_1.8.1_linux_amd64.zip
        mv vault /usr/bin/vault
        apk --update add yq
jobs:
  test:
    working_directory: /go/src/github.com/fairwindsops/pluto
    docker:
      - image: circleci/golang:1.17
    steps:
      - checkout
      - run: go mod download && go mod verify
      - run: go test -v ./... -coverprofile=coverage.txt -covermode=atomic
#      - run:
#          name: SonarCloud
#          command: |
#            set -ex
#            mkdir -p /tmp/cache
#            VERSION=4.1.0.1829
#            SCANNER_DIRECTORY=/tmp/cache/scanner
#            SONAR_USER_HOME=$SCANNER_DIRECTORY/.sonar
#            OS="linux"
#            echo $SONAR_USER_HOME
#            if [[ ! -x "$SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner" ]]; then
#              curl -Ol https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$VERSION-$OS.zip
#              unzip -qq -o sonar-scanner-cli-$VERSION-$OS.zip -d $SCANNER_DIRECTORY
#            fi
#            chmod +x $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner
#            chmod +x $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/jre/bin/java
#            $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner -X -Dsonar.projectBaseDir="/go/src/github.com/fairwindsops/pluto/" -Dsonar.host.url="https://sonarcloud.io"
#      - save_cache:
#          key: v1-sonarcloud-scanner-4.1.0.1829
#          paths: /tmp/cache/scanner
  release:
    working_directory: /go/src/github.com/fairwindsops/pluto
    resource_class: large
    shell: /bin/bash
    docker:
      - image: goreleaser/goreleaser:v0.174.2
        environment:
          GO111MODULE: "on"
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.6
      - *enable_experimental_docker_features
      - *install_vault
      - rok8s/get_vault_env:
          vault_path: repo/global/env
      - rok8s/docker_login:
          registry: "quay.io"
          username: $FAIRWINDS_QUAY_USER
          password-variable: FAIRWINDS_QUAY_TOKEN
      - run: goreleaser
  snapshot:
    working_directory: /go/src/github.com/fairwindsops/pluto
    resource_class: large
    docker:
      - image: goreleaser/goreleaser:v0.174.2
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.6
      - *enable_experimental_docker_features
      - run: goreleaser --snapshot
      - store_artifacts:
          path: dist
          destination: snapshot
  publish_docs:
    docker:
      - image: cimg/node:15.5.1
    steps:
      - checkout
      - run:
          name: Build Docs Site
          command: |
            set -e
            cd ./docs
            npm install
            npm run check-links
            npm run build
      - run:
          name: Install AWS CLI
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      - run:
          name: Publish Docs Site to S3
          command: |
            cd ./dist
            aws s3 sync ./ s3://pluto.docs.fairwinds.com --delete
workflows:
  version: 2
  test:
    jobs:
      - test
      - snapshot:
          requires:
            - test
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /.*/
      - rok8s/kubernetes_e2e_tests:
          requires:
            - test
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /.*/
          name: functional tests
          <<: *e2e_config
      - rok8s/insights:
          name: insights
          requires:
            - test
            - snapshot
  release:
    jobs:
      - publish_docs:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
