version: "2"
name: "Static Code Files (including helm)"
testcases:
- name: install helm3 assets
  steps:
  - script: |
      kubectl create ns demo2
      kubectl apply -f assets/helm3
    assertions:
    - result.code ShouldEqual 0

- name: helm detect show all
  steps:
  - script: pluto detect-helm  --target-versions k8s=v1.16.0
    assertions:
    - result.code ShouldEqual 3
    - result.systemout ShouldContainSubstring "NAME                           KIND         VERSION              REPLACEMENT   REMOVED   DEPRECATED"
    - result.systemout ShouldContainSubstring "test/test-helm3chart-v1beta1   Deployment   extensions/v1beta1   apps/v1       true      true"

- name: helm detect
  steps:
  - script: pluto detect-helm  --target-versions k8s=v1.16.0
    assertions:
    - result.code ShouldEqual 3
    - result.systemout ShouldContainSubstring "NAME                           KIND         VERSION              REPLACEMENT   REMOVED   DEPRECATED"
    - result.systemout ShouldContainSubstring "test/test-helm3chart-v1beta1   Deployment   extensions/v1beta1   apps/v1       true      true"
    - result.systemout ShouldNotContainSubstring "test/test-helm3chart           Deployment   apps/v1                            false     false"

- name: helm detect ignore deprecations
  steps:
  - script: pluto detect-helm  --ignore-deprecations --target-versions k8s=v1.15.0
    assertions:
    - result.code ShouldEqual 0
    - result.systemout ShouldContainSubstring "NAME                           KIND         VERSION              REPLACEMENT   REMOVED   DEPRECATED"
    - result.systemout ShouldContainSubstring "test/test-helm3chart-v1beta1   Deployment   extensions/v1beta1   apps/v1       false     true"
    - result.systemout ShouldNotContainSubstring "test/test-helm3chart           Deployment   apps/v1                            false     false"

- name: helm detect show all ignore removals
  steps:
  - script: pluto detect-helm  --ignore-removals --ignore-deprecations --target-versions k8s=v1.16.0
    assertions:
    - result.code ShouldEqual 0
    - result.systemout ShouldContainSubstring "NAME                           KIND         VERSION              REPLACEMENT   REMOVED   DEPRECATED"
    - result.systemout ShouldContainSubstring "test/test-helm3chart-v1beta1   Deployment   extensions/v1beta1   apps/v1       true      true"

- name: helm detect -owide
  steps:
  - script: pluto detect-helm  -owide --target-versions k8s=v1.16.0
    assertions:
    - result.code ShouldEqual 3
    - result.systemout ShouldContainSubstring "NAME                           NAMESPACE   KIND         VERSION              REPLACEMENT   DEPRECATED   DEPRECATED IN   REMOVED   REMOVED IN"
    - result.systemout ShouldContainSubstring "test/test-helm3chart-v1beta1   default     Deployment   extensions/v1beta1   apps/v1       true         v1.9.0          true      v1.16.0"
    - result.systemout ShouldContainSubstring "test/test-helm3chart-v1beta1   demo2       Deployment   extensions/v1beta1   apps/v1       true         v1.9.0          true      v1.16.0"

- name: helm detect -ojson
  steps:
  - script: pluto detect-helm  -ojson --target-versions k8s=v1.16.0
    assertions:
    - result.code ShouldEqual 3
    - result.systemout ShouldEqual {"items":[{"name":"test/test-helm3chart-v1beta1","namespace":"default","api":{"version":"extensions/v1beta1","kind":"Deployment","deprecated-in":"v1.9.0","removed-in":"v1.16.0","replacement-api":"apps/v1","component":"k8s"},"deprecated":true,"removed":true},{"name":"test/test-helm3chart-v1beta1","namespace":"demo2","api":{"version":"extensions/v1beta1","kind":"Deployment","deprecated-in":"v1.9.0","removed-in":"v1.16.0","replacement-api":"apps/v1","component":"k8s"},"deprecated":true,"removed":true}],"target-versions":{"cert-manager":"v0.15.1","istio":"v1.6.0","k8s":"v1.16.0"}}

- name: cleanup
  steps:
  - script: |
      kubectl delete -f assets/helm3
      kubectl delete ns demo2
