version: "2"
name: "CLI Validation"
testcases:
- name: Pass bad semver with no v
  steps:
  - script: pluto detect-files -d assets/deprecated116 --target-versions foo=1.0.0
    assertions:
    - result.code ShouldEqual 1
    - result.systemerr ShouldContainSubstring "you must use valid semver for all target versions with a leading 'v' - got foo 1.0.0"
- name: Pass bad semver starting with v
  steps:
  - script: pluto detect-files -d assets/deprecated116 --target-versions foo=vfoo
    assertions:
    - result.code ShouldEqual 1
    - result.systemerr ShouldContainSubstring "you must use valid semver for all target versions with a leading 'v' - got foo vfoo"
- name: list-versions -ojson
  steps:
  - script: pluto list-versions
    assertions:
    - result.code ShouldEqual 0
- name: list-versions additional file  duplicate
  steps:
  - script: pluto list-versions -f assets/additional-versions/duplicate.yaml
    assertions:
    - result.code ShouldEqual 1
    - result.systemerr ShouldContainSubstring 'duplicate cannot be added to defaults'
    - result.systemerr ShouldContainSubstring 'extensions/v1beta1'
- name: list-versions additional file
  steps:
  - script: pluto list-versions -f assets/additional-versions/new.yaml
    assertions:
    - result.code ShouldEqual 0
    - result.systemout ShouldContainSubstring "AnotherCRD                       someother/v1beta1                      v1.9.0          v1.16.0      apps/v1"
- name: Pass bad column list to custom
  steps:
  - script: pluto detect-files -d assets/deprecated116 --target-versions foo=vfoo -o custom --columns "FOO"
    assertions:
    - result.code ShouldEqual 1
    - result.systemerr ShouldContainSubstring "invalid custom column option FOO"
- name: Pass bad column list to markdown
  steps:
  - script: pluto detect-files -d assets/deprecated116 --target-versions foo=vfoo -o markdown --columns "FOO"
    assertions:
    - result.code ShouldEqual 1
    - result.systemerr ShouldContainSubstring "invalid custom column option FOO"
- name: Custom output with no columns flag
  steps:
  - script: pluto detect-files -d assets/deprecated116 --target-versions foo=vfoo -o custom
    assertions:
    - result.code ShouldEqual 1
    - result.systemerr ShouldContainSubstring "when --output=custom you must specify --columns"
- name: no output due to bad components list
  steps:
  - script: pluto detect-files -d assets/ --components=foo
    assertions:
    - result.code ShouldEqual 1
    - result.systemerr ShouldContainSubstring "cannot find deprecations for zero components"
