name: "Download pluto binary"
description: "Downloads the pluto binary by pulling the container image"
inputs:
  IMAGE_PULL_URL:
    description: "pull url for container image, i.e.: us-docker.pkg.dev/fairwinds-ops/oss/pluto"
    default: "us-docker.pkg.dev/fairwinds-ops/oss/pluto"
    required: true
  IMAGE_TAG:
    description: "tag for container image, i.e.: v5"
    default: "v5"
    required: true
  CONTAINER_ENGINE:
    description: "Optional: explicitly set container engine (docker/podman)"
    required: false

runs:
  using: "composite"
  steps:
    - name: Determine container engine
      id: detect_engine
      shell: bash
      run: |
        set -e
        # Respect explicit override
        if [[ -n "${{ inputs.CONTAINER_ENGINE }}" ]]; then
          echo "engine=${{ inputs.CONTAINER_ENGINE }}" >> "$GITHUB_OUTPUT"
        else
          if command -v podman >/dev/null 2>&1; then
            echo "engine=podman" >> "$GITHUB_OUTPUT"
          elif command -v docker >/dev/null 2>&1; then
            echo "engine=docker" >> "$GITHUB_OUTPUT"
          else
            echo "Neither podman nor docker found in PATH" >&2
            exit 1
          fi
        fi

    - name: Download pluto binary
      shell: bash
      run: |
        set -e
        ENGINE="${{ steps.detect_engine.outputs.engine }}"
        IMAGE="${{ inputs.IMAGE_PULL_URL }}:${{ inputs.IMAGE_TAG }}"
        DEST="/usr/local/bin/pluto"

        if [[ "$ENGINE" == "podman" ]]; then
          "$ENGINE" pull "$IMAGE"
          "$ENGINE" cp $(podman create --rm ${{ inputs.IMAGE_PULL_URL }}:${{ inputs.IMAGE_TAG }}):/pluto /usr/local/bin/pluto
        elif [[ "$ENGINE" == "docker" ]]; then
          "$ENGINE" pull "$IMAGE"
          CID=$("$ENGINE" create "$IMAGE")
          "$ENGINE" cp "$CID":/pluto "$DEST"
          "$ENGINE" rm "$CID"
        else
          echo "Unknown engine: $ENGINE" >&2
          exit 2
        fi
        chmod +x "$DEST"
        "$DEST" --help
